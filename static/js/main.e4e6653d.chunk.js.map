{"version":3,"sources":["utils/index.js","components/index.js","components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","hooks/useSnakeGame.js","App.js","reportWebVitals.js","index.js"],"names":["getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","fields","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","DirectionKeyCodeMap","37","38","39","40","OppositeDirection","Delta","Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","map","row","column","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","timer","unsubscribe","clearInterval","useSnakeGame","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","updateDirection","useCallback","newDirection","updateDifficulty","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","delta","newPosition","position","isCollision","isEatingMyself","newBody","removingTrack","pop","unshift","start","stop","reload","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e4e6653d.chunk.js","sourcesContent":["\nexport const getFoodPosition = (fieldSize, excludes) => {\n    while(true) {\n        const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n        const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n        const conflict = excludes.some(item => item.x === x && item.y === y)\n\n    if(!conflict) {\n    return { x, y }\n      }\n    }\n}\n\nexport const initFields = (fieldSize, snake) => {\n    \n    const fields = []\n    for(let i = 0; i < fieldSize; i++) {\n        const cols = new Array(fieldSize).fill('')\n        fields.push(cols)\n    }\n    fields[snake.y][snake.x] = 'snake'\n    \n    const food = getFoodPosition(fieldSize,[snake])\n    fields[food.y][food.x] = 'food'\n    \n    return fields;\n};\n\nexport const isCollision = (fieldSize, position) => {\n        if (position.y < 0 || position.x < 0 ) {\n            return true;\n        }\n\n        if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n            return true;\n        }\n\n        return false;\n    }\n\n     export const isEatingMyself = (fields, position) => {\n        return fields[position.y][position.x] === 'snake'  \n};\n\n","import { initFields } from \"../utils\"\n\nconst fieldSize = 35\nexport const initialPosition = {x: 17, y: 17 }\nexport const initialValues = initFields(fieldSize,initialPosition)\nexport const defaultInterval = 100\nexport const defaultDifficulty = 3\nexport const Difficulty = [1000, 500, 100, 50, 10]\n\nexport const GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover'\n })\n\nexport  const Direction = Object.freeze({\n  up: 'up',\n  right: 'right',\n  left: 'left',\n  down: 'down'\n })\n\nexport  const DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n});\n\nexport  const OppositeDirection = Object.freeze({\n  up: 'down',\n  right: 'left',\n  left: 'right',\n  down: 'up'\n })\n\nexport  const Delta = Object.freeze({\n   up: { x: 0, y: -1 },\n   right: { x:  1, y: 0 },\n   left: { x: -1, y: 0 },\n   down: { x: 0, y: 1 },\n })\n","import { defaultDifficulty, Difficulty } from \"../components\"\n\nconst Navigation = ({ length, difficulty = defaultDifficulty ,onChangeDifficulty}) => {\n    const upVisibility = difficulty < Difficulty.length ? '' : 'is-hidden'\n    const downVisibility = difficulty > 1 ? '' : 'is-hidden'\n    const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\n    const onDownDifficulty = () => onChangeDifficulty(difficulty - 1)\n    \n\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation-item\">\n          <span className=\"navigation-label\">Length: </span>\n          <div className=\"navigation-item-number-container\">\n            <div className=\"num-board\">{length}</div>\n          </div>\n      </div>\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Difficulty: </span>\n        <div className=\"navigation-item-number-container\">\n          <span className=\"num-board\">{difficulty}</span>\n          <div className=\"difficulty-button-container\">\n              <div\n                className={`difficulty-button difficulty-up ${upVisibility}`}\n                onClick={onUpDifficulty}\n            ></div>\n            <div\n                  className={`difficulty-button difficulty-down ${downVisibility}`}\n                  onClick={onDownDifficulty}\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )}\n\nexport default Navigation","\n\nconst Field = ({ fields }) => {\n    return (\n       <div className='field'>\n           {\n              fields.map((row) => {\n                  return row.map((column) => {\n                      return <div className={`dots ${column}`}></div>\n                  })\n\n              })\n           }\n       </div>\n    )\n}\n\nexport default Field","import { GameStatus } from '../components'\n\nconst Button = ({ status, onStart, onStop, onRestart }) => {\n    return (\n       <div className='button'>\n           { status === GameStatus.gameover && <button className=\"btn btn-gameover\" onClick={onRestart}>gameover</button> }\n           { status === GameStatus.init && <button className=\"btn btn-init\" onClick={onStart}>start</button> }\n           { status === GameStatus.suspended && <button className=\"btn btn-suspended\" onClick={onStart}>start</button> }\n           { status === GameStatus.playing && <button className=\"btn btn-playing\" onClick={onStop}>stop</button> }\n       </div>\n    )\n}\n\nexport default Button","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faArrowLeft,\n  faArrowUp,\n  faArrowDown,\n  faArrowRight\n} from '@fortawesome/free-solid-svg-icons'\nimport { Direction } from '../components'\n\nconst ManipulationPanel = ({ onChange }) => {\n    const onUp = () => onChange(Direction.up)\n    const onRight = () => onChange(Direction.right)\n    const onLeft = () => onChange(Direction.left)\n    const onDown = () => onChange(Direction.down)\n\n    return (\n       <div className='manipulation-panel'>\n        <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n           <FontAwesomeIcon icon={faArrowLeft} />\n        </button>\n\n       <div>\n        <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n          <FontAwesomeIcon icon={faArrowUp} />\n        </button>\n        <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n          <FontAwesomeIcon icon={faArrowDown} />\n        </button>\n       </div>\n\n      <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n          <FontAwesomeIcon icon={faArrowRight} />\n      </button>\n       </div>\n    )\n}\n\nexport default ManipulationPanel","import { useCallback, useEffect, useState } from 'react';\nimport {\n  defaultInterval,\n  defaultDifficulty,\n  initialPosition,\n  initialValues,\n  Delta,\n  Difficulty,\n  Direction,\n  DirectionKeyCodeMap,\n  GameStatus,\n  OppositeDirection,\n} from '../components';\nimport {\n  initFields,\n  isCollision,\n  isEatingMyself,\n  getFoodPosition,\n} from '../utils';\n\nlet timer = null;\n\nconst unsubscribe = () => {\n  if (!timer) {\n    return;\n  }\n  clearInterval(timer);\n};\n\nconst useSnakeGame = () => {\n    const [fields, setFields] = useState(initialValues);\n    const [body, setBody] = useState([]);\n    const [status, setStatus] = useState(GameStatus.init);\n    const [direction, setDirection] = useState(Direction.up);\n    const [difficulty, setDifficulty] = useState(defaultDifficulty);\n    const [tick, setTick] = useState(0);\n  \n    useEffect(() => {\n      setBody([initialPosition]);\n  \n      // ゲームの中の時間を管理する\n      const interval = Difficulty[difficulty - 1];\n      timer = setInterval(() => {\n        setTick((tick) => tick + 1);\n      }, interval);\n      return unsubscribe;\n    }, [difficulty]);\n  \n    useEffect(() => {\n      if (body.length === 0 || status !== GameStatus.playing) {\n        return;\n      }\n      const canContinue = handleMoving();\n      if (!canContinue) {\n        unsubscribe();\n        setStatus(GameStatus.gameover);\n      }\n    }, [tick]);\n\n    const start = () => setStatus(GameStatus.playing);\n\n  const stop = () => setStatus(GameStatus.suspended);\n\n  const reload = () => {\n    timer = setInterval(() => {\n      setTick((tick) => tick + 1);\n    }, defaultInterval);\n    setStatus(GameStatus.init);\n    setBody([initialPosition]);\n    setDirection(Direction.up);\n    setFields(initFields(fields.length, initialPosition));\n  };\n\n  const updateDirection = useCallback(\n    (newDirection) => {\n      if (status !== GameStatus.playing) {\n        return;\n      }\n      if (OppositeDirection[direction] === newDirection) {\n        return;\n      }\n      setDirection(newDirection);\n    },\n    [direction, status]\n  );\n\n  const updateDifficulty = useCallback(\n    (difficulty) => {\n      if (status !== GameStatus.init) {\n        return;\n    }\n    if (difficulty < 1 || difficulty > Difficulty.length) {\n      return;\n    }\n    setDifficulty(difficulty);\n  },\n  [status]\n);\n\nuseEffect(() => {\n  const handleKeyDown = (e) => {\n    const newDirection = DirectionKeyCodeMap[e.keyCode];\n    if (!newDirection) {\n      return;\n    }\n    updateDirection(newDirection);\n  };\n  document.addEventListener('keydown', handleKeyDown);\n  return () => document.removeEventListener('keydown', handleKeyDown);\n}, [updateDirection]);\n\nconst handleMoving = () => {\n  const { x, y } = body[0];\n  const delta = Delta[direction];\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y,\n    };\n    if (\n      isCollision(fields.length, newPosition) ||\n      isEatingMyself(fields, newPosition)\n    ) {\n      return false;\n    }\n    const newBody = [...body];\n    if (fields[newPosition.y][newPosition.x] !== 'food') {\n      const removingTrack = newBody.pop();\n      fields[removingTrack.y][removingTrack.x] = '';\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition]);\n      fields[food.y][food.x] = 'food';\n    }\n    fields[newPosition.y][newPosition.x] = 'snake';\n    newBody.unshift(newPosition);\n\n    setBody(newBody);\n    setFields(fields);\n    return true;\n  };\n  return {\n    body,\n    difficulty,\n    fields,\n    status,\n    start,\n    stop,\n    reload,\n    updateDirection,\n    updateDifficulty,\n  };\n};\n\nexport default useSnakeGame;\n\n","import Navigation from './components/Navigation';\nimport Field from './components/Field';\nimport Button from './components/Button';\nimport ManipulationPanel from './components/ManipulationPanel';\nimport useSnakeGame from './hooks/useSnakeGame'\n\nfunction App () {\n   const {\n     body,\n     difficulty,\n     fields,\n     start,\n     stop,\n     reload,\n     status,\n     updateDirection,\n     updateDifficulty,\n   } = useSnakeGame()\n\n  return (\n    <div className=\"App\">\n      <header className='header'>\n        <div className='title-container'>\n          <h1 className='title'>Snake Game</h1>\n        </div>\n        <Navigation \n          length={body.length}\n          difficulty={difficulty}\n          onChangeDifficulty={updateDifficulty} \n        />\n      </header>\n      <main className='main'>\n        <Field  fields={fields}/>\n      </main>\n      <footer className='footer'>\n        <Button \n            status={status} \n            onStart={start} \n            onRestart={reload}\n            onStop={stop}\n        />\n        <ManipulationPanel onChange={updateDirection}/>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}