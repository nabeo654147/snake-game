{"version":3,"sources":["components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","column","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","DirectionKeyCodeMap","37","38","39","40","OppositeDirection","Delta","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","setDifficulty","direction","setDirection","tick","setTick","useEffect","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","position","delta","newPosition","isEatingMyself","newBody","removingTrack","pop","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3cb59bd1.chunk.js","sourcesContent":["const Navigation = ({ length, difficulty = 3 ,onChangeDifficulty}) => {\n    const upVisibility = difficulty < 5 ? '' : 'is-hidden'\n    const downVisibility = difficulty > 1 ? '' : 'is-hidden'\n    const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\n    const onDownDifficulty = () => onChangeDifficulty(difficulty - 1)\n\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation-item\">\n          <span className=\"navigation-label\">Length: </span>\n          <div className=\"navigation-item-number-container\">\n            <div className=\"num-board\">{length}</div>\n          </div>\n      </div>\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Difficulty: </span>\n        <div className=\"navigation-item-number-container\">\n          <span className=\"num-board\">{difficulty}</span>\n          <div className=\"difficulty-button-container\">\n              <div\n                className={`difficulty-button difficulty-up ${upVisibility}`}\n                onClick={onUpDifficulty}\n            ></div>\n            <div\n                  className={`difficulty-button difficulty-down ${downVisibility}`}\n                  onClick={onDownDifficulty}\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )}\n\nexport default Navigation","const Field = ({ fields }) => {\n    return (\n       <div className='field'>\n           {\n              fields.map((row) => {\n                  return row.map((column) => {\n                      return <div className={`dots ${column}`}></div>\n                  })\n\n              })\n           }\n       </div>\n    )\n}\n\nexport default Field","const Button = ({ status, onStart, onStop, onRestart }) => {\n    return (\n       <div className='button'>\n           { status === 'gameover' && <button className=\"btn btn-gameover\" onClick={ onRestart }>gameover</button>}\n           { status === 'init' && <button className=\"btn btn-init\" onClick={ onStart }>start</button>}\n           { status === 'suspended' && <button className=\"btn btn-suspended\" onClick={ onStart }>start</button>}\n           { status === 'playing' && <button className=\"btn btn-playing\" onClick={ onStop }>stop</button>}\n       </div>\n    )\n}\n\nexport default Button","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faArrowLeft,\n  faArrowUp,\n  faArrowDown,\n  faArrowRight\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ManipulationPanel = ({ onChange }) => {\n    const onUp = () => onChange('up')\n    const onRight = () => onChange('right')\n    const onLeft = () => onChange('left')\n    const onDown = () => onChange('down')\n\n    return (\n       <div className='manipulation-panel'>\n        <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n           <FontAwesomeIcon icon={faArrowLeft} />\n        </button>\n\n       <div>\n        <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n          <FontAwesomeIcon icon={faArrowUp} />\n        </button>\n        <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n          <FontAwesomeIcon icon={faArrowDown} />\n        </button>\n       </div>\n\n      <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n          <FontAwesomeIcon icon={faArrowRight} />\n      </button>\n       </div>\n    )\n}\n\nexport default ManipulationPanel","\nexport const getFoodPosition = (fieldSize, excludes) => {\n    while(true) {\n        const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n        const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n        const conflict = excludes.some(item => item.x === x && item.y === y)\n\n    if(!conflict) {\n    return { x, y }\n      }\n    }\n}\n\nexport const initFields = (fieldSize, snake) => {\n    \n    const fields = []\n    for(let i = 0; i < fieldSize; i++) {\n        const cols = new Array(fieldSize).fill('')\n        fields.push(cols)\n    }\n    fields[snake.y][snake.x] = 'snake'\n    \n    const food = getFoodPosition(fieldSize,[snake])\n    fields[food.y][food.x] = 'food'\n    \n    return fields\n}","import { useCallback, useState, useEffect } from 'react';\nimport Navigation from './components/Navigation';\nimport Field from './components/Field';\nimport Button from './components/Button';\nimport ManipulationPanel from './components/ManipulationPanel';\nimport { initFields, getFoodPosition } from './utils';\n\nconst initialPosition = {x: 17, y: 17 }\nconst initialValues = initFields(35, initialPosition)\nconst defaultInterval = 100\nconst defaultDifficulty = 3\nconst Difficulty = [1000, 500, 100, 50, 10]\n\nconst GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover'\n })\n\n const Direction = Object.freeze({\n  up: 'up',\n  right: 'right',\n  left: 'left',\n  down: 'down'\n })\n\n const DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n});\n\n const OppositeDirection = Object.freeze({\n  up: 'down',\n  right: 'left',\n  left: 'right',\n  down: 'up'\n })\n\n const Delta = Object.freeze({\n   up: { x: 0, y: -1 },\n   right: { x:  1, y: 0 },\n   left: { x: -1, y: 0 },\n   down: { x: 0, y: 1 },\n })\n\nlet timer = undefined\n\nconst unsubscribe = () => {\n  if(!timer) {\n    return\n  }\n  clearInterval(timer)\n}\n\nconst isCollision = (fieldSize, position) => {\n  if(position.y < 0 || position.x < 0) {\n    return true;\n  }\n\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n    return true;\n  }\n\n  return false;\n};\n\nconst isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === 'snake'\n}\n\nconst App = () => {\n  const [fields, setFields] = useState(initialValues)\n  const [body, setBody] = useState([])\n  const [status,setStatus] = useState(GameStatus.init)\n  const [difficulty, setDifficulty] = useState(defaultDifficulty)\n  const [direction, setDirection] = useState(Direction.up)\n  const [tick, setTick] = useState(0)\n\n  useEffect(() => {\n    setBody([initialPosition])\n    // setBody(\n    //        new Array(15).fill('').map((_item, index) => ({ x: 17, y: 17 + index })),\n    //     )\n    const interval = Difficulty[difficulty - 1]\n    timer = setInterval(() => {\n     setTick(tick => tick +1)\n    },interval)\n    return unsubscribe\n  },[difficulty])\n\n  useEffect(() => {\n    if(body.length === 0 || status !== GameStatus.playing) {\n      return\n    }\n    const canContinue = handleMoving()\n    if (!canContinue) {\n      setStatus(GameStatus.gameover)\n    }\n  },[tick])\n\n  const onStart = () => setStatus(GameStatus.playing)\n\n  const onStop = () => setStatus(GameStatus.suspended)\n\n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    },defaultInterval)\n    setDirection(Direction.up)\n    setStatus(GameStatus.init)\n    setBody([initialPosition])\n    setFields(initFields(35, initialPosition))\n  }\n\n  const onChangeDirection = useCallback((newDirection) => {\n    if (status !== GameStatus.playing) {\n      return direction\n    }\n    if (OppositeDirection[direction] === newDirection) {\n      return\n    }\n    setDirection(newDirection)\n  },[direction, status])\n\n  const onChangeDifficulty = useCallback((difficulty) => {\n    if(status !== GameStatus.init) {\n      return\n    }\n    if (difficulty < 1  || difficulty > difficulty.length) {\n      return\n    }\n    setDifficulty(difficulty)\n  },[status, difficulty])\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode];\n      if(!newDirection) {\n        return;\n      }\n\n      onChangeDirection(newDirection);\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [onChangeDirection])\n\n  const handleMoving = () => {\n    const { x,y } = body[0]\n    const delta = Delta[direction]\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y\n    }\n    if (isCollision(fields.length, newPosition) || isEatingMyself(fields, newPosition)) {\n      unsubscribe()\n      return false\n    }\n    const newBody = [...body]\n    if (fields[newPosition.y][newPosition.x] !== 'food') {\n      const removingTrack = newBody.pop()\n      fields[removingTrack.y][removingTrack.x] = ''\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition])\n      fields[food.y][food.x] = 'food'\n    }\n    fields[newPosition.y][newPosition.x] = 'snake'\n    newBody.unshift(newPosition)\n\n    setBody(newBody)\n    setFields(fields)\n    return true\n  }\n\n  return (\n    <div className=\"App\">\n      <header className='header'>\n        <div className='title-container'>\n          <h1 className='title'>Snake Game</h1>\n        </div>\n        <Navigation \n          length={body.length}\n          difficulty={difficulty}\n          onChangeDifficulty={onChangeDifficulty} \n        />\n      </header>\n      <main className='main'>\n        <Field  fields={fields}/>\n      </main>\n      <footer className='footer'>\n        <Button \n            status={status} \n            onStart={onStart} \n            onRestart={onRestart}\n            onStop={onStop}\n        />\n        <ManipulationPanel onChange={onChangeDirection}/>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}